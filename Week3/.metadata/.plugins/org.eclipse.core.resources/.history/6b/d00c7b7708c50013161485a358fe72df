package com.example.weather;

import com.whimple.library.JSON;
import com.whimple.library.connection;
import android.support.v7.app.ActionBarActivity;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;
import android.content.Context;
import android.os.Bundle;

public class MainActivity extends ActionBarActivity {

	// variables
	static String TAG = "NETWORK DATA - MAIN ACTIVITY";
	Spinner spinnerCity;
	String[] cityList;
	Spinner spinnerState;
	String[] stateList;
	Spinner spinnerMeasure;
	String[] measurementList;
	String selectedMeasurement;
	Context context;
	public static String cityString = "";
	public static TextView text;
	
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		text = (TextView) findViewById(R.id.forecast);
		context = this;
		if (connection.checkConnection(context)){
			System.out.println("You have a connection!");
			
		}else{
			System.out.println("You don't have a connection!");
		}
		// get location spinner list and item on spinner that is selected
		cityList = getResources().getStringArray(R.array.city_array);
		spinnerCity = (Spinner) findViewById(R.id.city);
		spinnerCity.setOnItemSelectedListener(new OnItemSelectedListener() {
			public void onItemSelected(AdapterView<?> parent, View view,
					int position, long id) {
				// text for toast from selected spinner item
				Toast.makeText(spinnerCity.getContext(),
						"You have selected " + cityList[position],
						Toast.LENGTH_LONG).show();
				//cityString = "http://api.wunderground.com/api/0daa58d9b0337d04/conditions/q/NV/" + locList[position] + ".json";
			}

			@Override
			public void onNothingSelected(AdapterView<?> arg0) {
				// TODO Auto-generated method stub

			}
			
		});
		
		// get measurement spinner list and item on spinner that is selected
				stateList = getResources().getStringArray(
						R.array.state_array);
				spinnerState = (Spinner) findViewById(R.id.state);
				spinnerState.setOnItemSelectedListener(new OnItemSelectedListener() {
					public void onItemSelected(AdapterView<?> parent, View view,
							int position, long id) {
						// text for toast from selected spinner item
						Toast.makeText(spinnerState.getContext(),
								"You have selected " + stateList[position],
								Toast.LENGTH_LONG).show();
					}

					@Override
					public void onNothingSelected(AdapterView<?> arg0) {
						// TODO Auto-generated method stub

					}
				});
				
		// get measurement spinner list and item on spinner that is selected
		measurementList = getResources().getStringArray(
				R.array.measurement_array);
		spinnerMeasure = (Spinner) findViewById(R.id.measurement);
		spinnerMeasure.setOnItemSelectedListener(new OnItemSelectedListener() {
			public void onItemSelected(AdapterView<?> parent, View view,
					int position, long id) {
				// text for toast from selected spinner item
				Toast.makeText(spinnerMeasure.getContext(),
						"You have selected " + measurementList[position],
						Toast.LENGTH_LONG).show();
			}

			@Override
			public void onNothingSelected(AdapterView<?> arg0) {
				// TODO Auto-generated method stub

			}
		});
	};
	
	
	
	public void onClick(View view) {

		// get the selected location spinner
		String selectedCity = spinnerCity.getSelectedItem().toString();
		String underscoreString = selectedCity.replaceAll(" ", "_");
		String selectedState = spinnerState.getSelectedItem().toString();
		TextView results = (TextView) findViewById(R.id.forecast);
		cityString = "http://api.wunderground.com/api/0daa58d9b0337d04/conditions/q/" + selectedState + "/" + underscoreString +".json";
		// get the selected measurement spinner name and put both spinner
		// selections in the read JSON method
		selectedMeasurement = spinnerMeasure.getSelectedItem().toString();

		results.setText(JSON.readJSON(cityString, selectedMeasurement));

	}

}
