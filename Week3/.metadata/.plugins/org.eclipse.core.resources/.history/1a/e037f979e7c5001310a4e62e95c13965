package com.whimple.library;

import java.util.concurrent.ExecutionException;
import com.example.weather.MainActivity;
import com.whimple.library.connection.getData;
import org.json.JSONException;
import org.json.JSONObject;

public class JSON {

	static String responseString = "";

	// builds JSON from user given location values from json
	public static JSONObject buildJSON(String cityString) {

		JSONObject locationObject = new JSONObject();

		try {
			//locationObject.getJSONObject("response").getString("results")
			//.length()
			connection.getData data = new getData();
			responseString = data.execute(cityString).get();
			locationObject = new JSONObject(responseString);
			System.out.println(locationObject);
			if (locationObject.getJSONObject("response").getJSONObject("error")
					.getString("type")
					.equals("querynotfound")){
				
					MainActivity.newAlertView("You have entered an invalid city. Please try again.");
			}
		} catch (InterruptedException e) {
			System.out.print("Problem in buildJSON");
		} catch (ExecutionException e) {
			System.out.print("Problem in buildJSON");
		} catch (JSONException e) {
			System.out.print("Problem in buildJSON");
		}

		return locationObject;
	}

	// read JSON
	public static String readJSON(String cityString, String selectedMeasurement) {

		// variables for the values from after build JSON
		String output = null, temp, feelsLike, sky, humidity, windSpeed, cTemp, cFeelsLike;

		JSONObject jsonObject = buildJSON(cityString);

		try {
			temp = jsonObject.getJSONObject("current_observation").getString(
					"temp_f");

			feelsLike = jsonObject.getJSONObject("current_observation")
					.getString("feelslike_f");

			sky = jsonObject.getJSONObject("current_observation").getString(
					"weather");

			humidity = jsonObject.getJSONObject("current_observation")
					.getString("relative_humidity");

			windSpeed = jsonObject.getJSONObject("current_observation")
					.getString("wind_string");

			cTemp = jsonObject.getJSONObject("current_observation").getString(
					"temp_c");

			cFeelsLike = jsonObject.getJSONObject("current_observation")
					.getString("feelslike_c");

			// if spinner is fahrenheit
			if (selectedMeasurement.equals("Fahrenheit")) {
				output = "Temperature: " + temp + "deg F" + "\r\n"
						+ "Feels Like: " + feelsLike + "deg F" + "\r\n"
						+ "Humidity: " + humidity + "\r\n" + sky + "\r\n"
						+ windSpeed + "\r\n";
			}
			// if spinner is celcius
			if (selectedMeasurement.equals("Celcius")) {

				output = "Temperature: " + cTemp + "deg C" + "\r\n"
						+ "Feels Like: " + cFeelsLike + "deg C" + "\r\n"
						+ "Humidity: " + humidity + "\r\n" + sky + "\r\n"
						+ windSpeed + "\r\n";

			}

		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return output;
	}

}
